name: Build and Publish Image to GitHub Container Registry

on:
  # trigger manual
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'MessagePublisher/**'
      - 'WsjtxUdpLib/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          source-url: https://nuget.pkg.github.com/jeffu231/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      - name: Display dotnet version
        run: dotnet --version
        
      - name: Install Dependencies
        run: dotnet restore

      - name: Setup git
        run: |
          git config --local user.email "git@k9kld.org"
          git config --local user.name "git"
          
      - name: Install Versionize
        run: dotnet tool install --global Versionize

      - name: Versioning
        id: versionize
        run: versionize --aggregate-pre-releases --skip-dirty
        continue-on-error: true

      - name: Test if release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."

      - name: Push changes to GitHub
        if: steps.versionize.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Get current version
        if: steps.versionize.outcome == 'success'
        run: echo "VERSION=v$(versionize inspect)" >> $GITHUB_ENV

      - name: Get current changelog
        if: steps.versionize.outcome == 'success'
        run: echo "$(versionize changelog)" > latest_changelog.md

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish and push the container Image
        run: |
          dotnet publish -c Release /p:PublishProfile=github
          
      - name: create release info
        if: steps.versionize.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{env.VERSION}} -t "Release ${{env.VERSION}}" -F latest_changelog.md
